name: 'ECS Cluster, Task and Service Deployment to Non Prod via AWS CloudFormation'

on:
  # push:
  #   branches: [ develop ]
  # pull_request:
  #   branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab 
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  CLUSTER_NAME: ${{vars.APP_NAME}}-cluster
  SERVICE_NAME: ${{vars.APP_NAME}}-service
  STACK_NAME: ${{vars.APP_NAME}}-stack

jobs:
  # This workflow contains a single job called "build"
  build:
    name: Cloudformation for ECS Cluster, Task and Service Deployment
    # The type of runner that the job will run on 
    runs-on: ubuntu-latest
    environment: sandbox

  # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
    
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      # Setup SAM CLI  
      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
        env:
          VERSION: ${{steps.package-version.outputs.current-version}}

      # sam deploy
      - run: sam package --template-file ./IaC/NonProd/ECSCluster.yaml --s3-bucket my-gi-ecs-poc-bucket --output-template-file ecs-develop-deploy.yaml && aws cloudformation deploy --template-file ecs-develop-deploy.yaml --stack-name ${STACK_NAME}-nonprod --capabilities CAPABILITY_NAMED_IAM --parameter-override ClusterName=${CLUSTER_NAME} ServiceName=${SERVICE_NAME} --debug